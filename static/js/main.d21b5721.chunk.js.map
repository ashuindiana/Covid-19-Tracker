{"version":3,"sources":["InfoBox.js","utils.js","Map.js","Table.js","LineGraph.js","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","title","cases","isRed","active","total","props","Card","className","onClick","CardContent","Typography","color","casesTypeColors","multiplier","option","fillColor","recovered","deaths","sortData","data","sort","a","b","prettyPrintStat","stat","numeral","format","showDataOnMap","casesType","map","country","Circle","center","countryInfo","lat","long","fillOpacity","pathOptions","radius","Math","sqrt","Popup","style","backgroundImage","flag","ChangeMap","zoom","useMap","setView","Map","countries","console","log","MapContainer","scrollWheelZoom","TileLayer","url","attribution","Table","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","useState","setData","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","useEffect","fetch","then","resp","json","fetchData","length","datasets","backgroundColor","borderColor","App","setCountries","setCountry","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","name","iso2","sortedData","getCountries","onCountryChange","event","countryCode","target","FormControl","Select","variant","onChange","MenuItem","e","todayCases","todayRecovered","todayDeaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d21b5721.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, CardContent, Typography} from '@material-ui/core';\r\nimport './InfoBox.css'\r\n\r\nfunction InfoBox({ title, cases, isRed, active, total, ...props}) {\r\n\treturn (\r\n\t\t<Card className={`infoBox \r\n\t\t\t${active && \"infoBox--selected\"}\r\n\t\t\t${isRed && \"infoBox--red\"}`} \r\n\t\t\tonClick={props.onClick}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t <Typography className='infoBox__title' color='textSecondary'>\r\n\t\t\t\t \t {title}\r\n\t\t\t\t </Typography>\r\n\t\t\t\t <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>{cases}</h2>\r\n\t\t\t\t <Typography className='infoBox__total' color='textSecondary'>\r\n\t\t\t\t \t{total} Total\r\n\t\t\t\t </Typography>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default InfoBox;","import React from 'react';\r\nimport {Circle, Popup} from 'react-leaflet';\r\nimport numeral from 'numeral';\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    multiplier: 400,\r\n    option: { color:\"#cc1034\", fillColor: \"#cc1034\" },\r\n  },\r\n  recovered: {\r\n    multiplier: 600,\r\n    option: { color:\"#7dd71d\", fillColor: \"#7dd71d\" },\r\n  },\r\n  deaths: {\r\n    multiplier: 1800,\r\n    option: { color:\"#ff6c47\", fillColor: \"#ff6c47\" }\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n\tconst sortedData = [...data];\r\n\treturn sortedData.sort((a, b) => (a.cases > b.cases)?-1:1);\r\n};\r\n\r\nexport const prettyPrintStat = (stat) => {\r\n\treturn stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n}\r\n\r\nexport const showDataOnMap = (data, casesType=\"cases\") => \r\n\tdata.map(country => (\r\n\t\t\t<Circle center={[country.countryInfo.lat, country.countryInfo.long]}\r\n\t\t\t\tfillOpacity={0.4}\r\n\t\t\t\tpathOptions={casesTypeColors[casesType].option}\r\n\t\t\t\tradius={\r\n\t\t\t\t\tMath.sqrt(country[casesType])*casesTypeColors[casesType].multiplier\r\n\t\t\t\t}>\r\n\t\t\t\t<Popup>\r\n\t\t\t\t\t<div className='info-container'>\r\n\t\t\t\t\t\t<div className='info-flag'\r\n\t\t\t\t\t\t\tstyle={{backgroundImage:`url(${country.countryInfo.flag})`}}></div>\r\n\t\t\t\t\t\t<div className='info-name'>{country.country}</div>\r\n\t\t\t\t\t\t <div className='info-confirmed'>\r\n\t\t\t\t\t\t\tCases: {numeral(country.cases).format(\"0,0\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='info-recovered'>\r\n\t\t\t\t\t\t\tRecovered: {numeral(country.recovered).format(\"0,0\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='info-deaths'>\r\n\t\t\t\t\t\t\tDeaths: {numeral(country.deaths).format(\"0,0\")}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Popup>\r\n\t\t\t</Circle>\r\n\t\t)\r\n);","import React from 'react';\r\nimport { MapContainer, TileLayer, useMap } from 'react-leaflet';\r\nimport './Map.css';\r\nimport { showDataOnMap } from './utils';\r\n\r\nfunction ChangeMap({ center, zoom }) {\r\n  const map = useMap();\r\n  map.setView(center, zoom);\r\n  return null;\r\n}\r\n\r\nfunction Map({countries, casesType, center, zoom}) {\r\n\tconsole.log(casesType)\r\n\treturn (\r\n\t\t<div className='map'>\r\n\t\t\t<MapContainer  scrollWheelZoom={false}>\r\n\t\t\t\t<ChangeMap center={center} zoom={zoom} />\r\n\t\t\t\t<TileLayer\r\n\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          \t\t\tattribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          \t\t\t/>\r\n          \t\t{showDataOnMap(countries, casesType)}\r\n\t\t\t</MapContainer>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Map;","import React from 'react'\r\nimport './Table.css';\r\nimport numeral from 'numeral';\r\n\r\nfunction Table({ countries }) {\r\n\treturn (\r\n\t\t<div className='table'>\r\n\t\t\t{countries.map(({country, cases}) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>{country}</td>\r\n\t\t\t\t\t\t<td><strong>{numeral(cases).format(\"0,0\")}</strong></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Table;","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport numeral from 'numeral';\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nfunction LineGraph({ casesType = 'cases', ...props }) {\r\n\tconst [data, setData] = useState({});\r\n\r\n\tconst buildChartData = (data, casesType) => {\r\n\t\tlet chartData = [];\r\n\t\tlet lastDataPoint;\r\n\t\tfor(let date in data.cases) {\r\n\t\t\tif(lastDataPoint) {\r\n\t\t\t\tlet newDataPoint = {\r\n\t\t\t\t\tx: date,\r\n\t\t\t\t\ty: data[casesType][date] - lastDataPoint\r\n\t\t\t\t};\r\n\t\t\t\tchartData.push(newDataPoint);\r\n\t\t\t}\r\n\t\t\tlastDataPoint = data[casesType][date];\r\n\t\t}\r\n\t\treturn chartData;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tawait fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n\t\t\t.then(resp => resp.json())\r\n\t\t\t.then(data =>{\r\n\t\t\t\tsetData(buildChartData(data, casesType));\r\n\t\t\t});\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, [casesType]);\r\n\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t{data?.length > 0 && (\r\n\t\t\t\t<Line data = {{\r\n\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbackgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n\t\t                borderColor: \"#CC1034\",\r\n\t\t                data: data,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t}}\r\n\t\t\t\toptions={options} />\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LineGraph;","import {\n  MenuItem,\n  Select,\n  FormControl,\n  Card,\n  CardContent\n} from '@material-ui/core';\nimport {useState, useEffect} from 'react';\nimport InfoBox from './InfoBox.js';\nimport Map from './Map';\nimport Table from './Table';\nimport './App.css';\nimport {sortData, prettyPrintStat} from './utils';\nimport LineGraph from './LineGraph';\nimport \"leaflet/dist/leaflet.css\";\n\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = \n    useState([-10.00746, 40.4796]);\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState('cases');\n\n  useEffect(() => {\n      fetch('https://disease.sh/v3/covid-19/all')\n      .then(resp => resp.json())\n      .then(data =>{\n        setCountryInfo(data);\n      });\n  }, [])\n\n  useEffect(() => {\n    const getCountries = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries')\n      .then(resp => resp.json())\n      .then((data) => {\n        const countries = data.map(country=> (\n          {\n            name: country.country,\n            value: country.countryInfo.iso2\n          }\n        ));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n        setMapCountries(data);\n      });\n    };\n    getCountries();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n\n    const url = countryCode=== 'worldwide'?\n      \"https://disease.sh/v3/covid-19/all\":\n      `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n    .then(resp => resp.json())\n    .then(data => {\n      if (countryCode === 'worldwide') {\n        setMapCenter([-10.00746, 40.4796])\n        setMapZoom(3);\n      } else {\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      }\n      setCountry(countryCode);\n      setCountryInfo(data);\n    })\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\"\n                    value={country}\n                    onChange={onCountryChange}>\n              <MenuItem value= \"worldwide\">WorldWide</MenuItem>\n              {countries.map(country => {\n                return <MenuItem value={country.value}>{country.name}</MenuItem>\n              })}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n           <InfoBox \n           isRed\n           active={casesType===\"cases\"}\n           onClick={(e) => setCasesType(\"cases\")}\n           title=\"Coronavirus Cases\" \n           cases={prettyPrintStat(countryInfo.todayCases)} \n           total={prettyPrintStat(countryInfo.cases)} />\n\n            <InfoBox \n            active={casesType===\"recovered\"}\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\" \n            cases={prettyPrintStat(countryInfo.todayRecovered)} \n            total={prettyPrintStat(countryInfo.recovered)} />\n\n           <InfoBox \n           isRed\n           active={casesType===\"deaths\"}\n           onClick={(e) => setCasesType(\"deaths\")}\n           title=\"Deaths\" \n           cases={prettyPrintStat(countryInfo.todayDeaths)} \n           total={prettyPrintStat(countryInfo.deaths)} />\n        </div>\n\n        <Map countries={mapCountries} casesType={casesType} center={mapCenter} zoom={mapZoom}/>\n      \n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by country</h3>\n          <Table countries={tableData} />\n          <h3 className='app__graphTitle'>WorldWide new {casesType}</h3>\n          <LineGraph className=\"app__graph\" casesType={casesType}/>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}